./prog teste.c

Passo 1: RECONHECENDO SIMBOLOS

A Constant: #define
An identifier: PALMITO
An integer: 3 (3)

	 SIMBOLO reconhecido, nome: PALMITO valor: 3 tipo: #define tamanho tabela: 0
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)

	 SIMBOLO reconhecido, nome: ABCDEF valor: 10 tipo: #define tamanho tabela: 1
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)

	 SIMBOLO reconhecido, nome: BRYANHF valor: 5 tipo: #define tamanho tabela: 2
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;

	 SIMBOLO reconhecido, nome: y valor: VAZIO tipo: int indice: 3

A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;

	 SIMBOLO reconhecido, nome: x valor: 3 tipo: int indice: 4

A Line: 10
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;

	SOMA reconhecidoA Line: 11
A keyword: if
A Left Parenthesis: (
An integer: 3 (3)
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 12
A keyword: int
An identifier: p
A equals: =
An integer: 7 (7)
A final: ;

	 SIMBOLO reconhecido, nome: p valor: 7 tipo: int indice: 5

A Line: 13
An identifier: y
A equals: =
An integer: 29 (29)
A plus operator: +
An integer: 3 (3)
A final: ;

	SOMA reconhecidoA Line: 14
A right key: }
A Line: 15
A Line: 16
A keyword: int
An identifier: j
A final: ;

	 SIMBOLO reconhecido, nome: j valor: VAZIO tipo: int indice: 6

A Line: 17
A Line: 18
An identifier: p
A equals: =
An identifier: PALMITO
A plus operator: +
An integer: 3 (3)
A final: ;

	SOMA reconhecidoA Line: 19
A Line: 20
A printf function: printf
A Left Parenthesis: (
A ASP: "
An identifier: Helloword
A ASP: "
A Right Parenthesis: )
A final: ;
A Line: 21
A Line: 22
A keyword: do
A left key: {
A Line: 23
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;

	 ATRIBUICAO reconhecido, nome: x valor: 5 indice: 7

A Line: 24
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A final: ;
A Line: 25
A Line: 26
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 27
An identifier: y
A equals: =
An integer: 5 (5)
A final: ;

	 ATRIBUICAO reconhecido, nome: y valor: 5 indice: 7

A Line: 28
A right key: }
A Line: 29
A Line: 30
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 31
A right key: }
EOF

Passo 2: POPULANDO TABELA DE SIMBOLOS

A Constant: #define
An identifier: PALMITO
An integer: 3 (3)

	 SIMBOLO reconhecido, nome: PALMITO valor: 3 tipo: #define tamanho tabela: 0

	TOTAL = 1
>>>>>>> [(null)]	[PALMITO] 0
	 testando função 0
	 TESTANDO TABELA DE SIMBOLOS>> PALMITO valor: 3 tipo: #define indice: 0
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)

	 SIMBOLO reconhecido, nome: ABCDEF valor: 10 tipo: #define tamanho tabela: 1

	TOTAL = 2
>>>>>>> [PALMITO]	[ABCDEF] 0
>>>>>>> [(null)]	[ABCDEF] 1
	 testando função 0
	 TESTANDO TABELA DE SIMBOLOS>> ABCDEF valor: 10 tipo: #define indice: 1
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)

	 SIMBOLO reconhecido, nome: BRYANHF valor: 5 tipo: #define tamanho tabela: 2

	TOTAL = 3
>>>>>>> [PALMITO]	[BRYANHF] 0
>>>>>>> [ABCDEF]	[BRYANHF] 1
>>>>>>> [(null)]	[BRYANHF] 2
	 testando função 0
	 TESTANDO TABELA DE SIMBOLOS>> BRYANHF valor: 5 tipo: #define indice: 2
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;

	 SIMBOLO reconhecido, nome: y valor: VAZIO tipo: int indice: 3


	TOTAL = 4
>>>>>>> [PALMITO]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [(null)]	[y] 3
	 testando função -1
	 TESTANDO TABELA DE SIMBOLOS>> y valor: VAZIO (nil) Tipo: int indice: 3
A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;

	 SIMBOLO reconhecido, nome: x valor: 3 tipo: int indice: 4


	TOTAL = 5
>>>>>>> [PALMITO]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [(null)]	[x] 4
	 testando função -1
	 TESTANDO TABELA DE SIMBOLOS>> x valor: 3 Tipo: int indice: 4
A Line: 10
An identifier: x
A equals: =
An identifier: x

	TOTAL = 5
>>>>>>> [PALMITO]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4A minus operator: -
An identifier: y

	TOTAL = 5
>>>>>>> [PALMITO]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3A final: ;

	SOMA reconhecido
	TOTAL = 5
>>>>>>> [PALMITO]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4A Line: 11
A keyword: if
A Left Parenthesis: (
An integer: 3 (3)
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 12
A keyword: int
An identifier: p
A equals: =
An integer: 7 (7)
A final: ;

	 SIMBOLO reconhecido, nome: p valor: 7 tipo: int indice: 5


	TOTAL = 6
>>>>>>> [PALMITO]	[p] 0
>>>>>>> [ABCDEF]	[p] 1
>>>>>>> [BRYANHF]	[p] 2
>>>>>>> [y]	[p] 3
>>>>>>> [x]	[p] 4
>>>>>>> [(null)]	[p] 5
	 testando função -1
	 TESTANDO TABELA DE SIMBOLOS>> p valor: 7 Tipo: int indice: 5
A Line: 13
An identifier: y
A equals: =
An integer: 29 (29)
A plus operator: +
An integer: 3 (3)
A final: ;

	SOMA reconhecido
	TOTAL = 6
>>>>>>> [PALMITO]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3A Line: 14
A right key: }
A Line: 15
A Line: 16
A keyword: int
An identifier: j
A final: ;

	 SIMBOLO reconhecido, nome: j valor: VAZIO tipo: int indice: 6


	TOTAL = 7
>>>>>>> [PALMITO]	[j] 0
>>>>>>> [ABCDEF]	[j] 1
>>>>>>> [BRYANHF]	[j] 2
>>>>>>> [y]	[j] 3
>>>>>>> [x]	[j] 4
>>>>>>> [p]	[j] 5
>>>>>>> [(null)]	[j] 6
	 testando função -1
	 TESTANDO TABELA DE SIMBOLOS>> j valor: VAZIO (nil) Tipo: int indice: 6
A Line: 17
A Line: 18
An identifier: p
A equals: =
An identifier: PALMITO

	TOTAL = 7
>>>>>>> [PALMITO]	[PALMITO] 0A plus operator: +
An integer: 3 (3)
A final: ;

	SOMA reconhecido
	TOTAL = 7
>>>>>>> [PALMITO]	[p] 0
>>>>>>> [ABCDEF]	[p] 1
>>>>>>> [BRYANHF]	[p] 2
>>>>>>> [y]	[p] 3
>>>>>>> [x]	[p] 4
>>>>>>> [p]	[p] 5A Line: 19
A Line: 20
A printf function: printf
A Left Parenthesis: (
A ASP: "
An identifier: Helloword
A ASP: "
A Right Parenthesis: )
A final: ;
A Line: 21
A Line: 22
A keyword: do
A left key: {
A Line: 23
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;

	 ATRIBUICAO reconhecido, nome: x valor: 5 indice: 7


	TOTAL = 7
>>>>>>> [PALMITO]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4
	 testando função 4
	 TESTANDO TABELA DE SIMBOLOS>> x valor: 5 Tipo: int indice: 4
A Line: 24
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: x

	TOTAL = 7
>>>>>>> [PALMITO]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A final: ;
A Line: 25
A Line: 26
A keyword: while
A Left Parenthesis: (
An identifier: x

	TOTAL = 7
>>>>>>> [PALMITO]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 27
An identifier: y
A equals: =
An integer: 5 (5)
A final: ;

	 ATRIBUICAO reconhecido, nome: y valor: 5 indice: 7


	TOTAL = 7
>>>>>>> [PALMITO]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3
	 testando função 3
	 TESTANDO TABELA DE SIMBOLOS>> y valor: 5 Tipo: int indice: 3
A Line: 28
A right key: }
A Line: 29
A Line: 30
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 31
A right key: }
EOF

	 TAMANHO TOTAL TABELA: 7

	 INDICE: 0 	 nome: PALMITO 	 valor: 3 	 tipo: #define 
	 INDICE: 1 	 nome: ABCDEF 	 valor: 10 	 tipo: #define 
	 INDICE: 2 	 nome: BRYANHF 	 valor: 5 	 tipo: #define 
	 INDICE: 3 	 nome: y 	 valor: 5 	 tipo: int 
	 INDICE: 4 	 nome: x 	 valor: 5 	 tipo: int 
	 INDICE: 5 	 nome: p 	 valor: 7 	 tipo: int 
	 INDICE: 6 	 nome: j 	 valor: (null) 	 tipo: int 

Passo 3: IDENTIFICANDO CONSTANTES

A Constant: #define
An identifier: PALMITO
An integer: 3 (3)

	Constante reconhecida!

A Line: 1
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)

	Constante reconhecida!

A Line: 2
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)

	Constante reconhecida!

A Line: 3
A Line: 4
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 5
A Line: 6
A Line: 7
A keyword: int
An identifier: y
A final: ;
A Line: 8
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;
A Line: 9
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;
A Line: 10
A keyword: if
A Left Parenthesis: (
An integer: 3 (3)
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 11
A keyword: int
An identifier: p
A equals: =
An integer: 7 (7)
A final: ;
A Line: 12
An identifier: y
A equals: =
An integer: 29 (29)
A plus operator: +
An integer: 3 (3)
A final: ;
A Line: 13
A right key: }
A Line: 14
A Line: 15
A keyword: int
An identifier: j
A final: ;
A Line: 16
A Line: 17
An identifier: p
A equals: =
An identifier: PALMITO
A plus operator: +
An integer: 3 (3)
A final: ;
A Line: 18
A Line: 19
A printf function: printf
A Left Parenthesis: (
A ASP: "
An identifier: Helloword
A ASP: "
A Right Parenthesis: )
A final: ;
A Line: 20
A Line: 21
A keyword: do
A left key: {
A Line: 22
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;
A Line: 23
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A final: ;
A Line: 24
A Line: 25
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 26
An identifier: y
A equals: =
An integer: 5 (5)
A final: ;
A Line: 27
A right key: }
A Line: 28
A Line: 29
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 30
A right key: }
EOF

Passo 4: LENDO FUNCAO PRINCIPAL

A Constant: #define
An identifier: PALMITO
An integer: 3 (3)
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {

	Funcao main reconhecida!

A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;

	Declaracao reconhecida!

A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;

	Declaracao com instanciacao reconhecida!

A Line: 10
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;

	Soma reconhecida!

A Line: 11
A keyword: if
A Left Parenthesis: (
An integer: 3 (3)
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {

	Comando if reconhecido!

A Line: 12
A keyword: int
An identifier: p
A equals: =
An integer: 7 (7)
A final: ;

	Declaracao com instanciacao reconhecida!

A Line: 13
An identifier: y
A equals: =
An integer: 29 (29)
A plus operator: +
An integer: 3 (3)
A final: ;

	Soma reconhecida!

A Line: 14
A right key: }
A Line: 15
A Line: 16
A keyword: int
An identifier: j
A final: ;

	Declaracao reconhecida!

A Line: 17
A Line: 18
An identifier: p
A equals: =
An identifier: PALMITO
A plus operator: +
An integer: 3 (3)
A final: ;

	Soma reconhecida!

A Line: 19
A Line: 20
A printf function: printf
A Left Parenthesis: (
A ASP: "
An identifier: Helloword
A ASP: "
A Right Parenthesis: )
A final: ;

	Comando printf reconhecido!!

A Line: 21
A Line: 22
A keyword: do
A left key: {

	Comando do-while reconhecido!

A Line: 23
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;

	Atribuicao reconhecida!

A Line: 24
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A final: ;

	Comando do-while reconhecido!

A Line: 25
A Line: 26
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A left key: {

	Comando while reconhecido!

A Line: 27
An identifier: y
A equals: =
An integer: 5 (5)
A final: ;

	Atribuicao reconhecida!

A Line: 28
A right key: }
A Line: 29
A Line: 30
A keyword: return
An integer: 0 (0)
A final: ;

	Retorno da funcao main reconhecida!

A Line: 31
A right key: }
EOF

Passo 5: VERIFICANDO CODIGO

A Constant: #define
An identifier: PALMITO
An integer: 3 (3)
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;
A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;
A Line: 10
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;
A Line: 11
A keyword: if
A Left Parenthesis: (
An integer: 3 (3)
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 12
A keyword: int
An identifier: p
A equals: =
An integer: 7 (7)
A final: ;
A Line: 13
An identifier: y
A equals: =
An integer: 29 (29)
A plus operator: +
An integer: 3 (3)
A final: ;
A Line: 14
A right key: }
A Line: 15
A Line: 16
A keyword: int
An identifier: j
A final: ;
A Line: 17
A Line: 18
An identifier: p
A equals: =
An identifier: PALMITO
A plus operator: +
An integer: 3 (3)
A final: ;
A Line: 19
A Line: 20
A printf function: printf
A Left Parenthesis: (
A ASP: "
An identifier: Helloword
A ASP: "
A Right Parenthesis: )
A final: ;
A Line: 21
A Line: 22
A keyword: do
A left key: {
A Line: 23
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;
A Line: 24
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A final: ;
A Line: 25
A Line: 26
A keyword: while
A Left Parenthesis: (
An identifier: x
A compare: >
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 27
An identifier: y
A equals: =
An integer: 5 (5)
A final: ;
A Line: 28
A right key: }
A Line: 29
A Line: 30
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 31
A right key: }
EOF


	Numero de parentesis abertos: 0

	Numero de chaves abertas: 0

	Estrutura DO-WHILE completo: 0

	Numero de simbolos na tabela 7

