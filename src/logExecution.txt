./prog teste.c

Passo 1: LENDO TABELA DE SIMBOLOS

A Constant: #define
An identifier: PAL
An integer: 3 (3)

	 SIMBOLO reconhecido, nome: PAL valor: 3 tipo: #define tamanho tabela: 0
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)

	 SIMBOLO reconhecido, nome: ABCDEF valor: 10 tipo: #define tamanho tabela: 1
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)

	 SIMBOLO reconhecido, nome: BRYANHF valor: 5 tipo: #define tamanho tabela: 2
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;

	 SIMBOLO reconhecido, nome: y valor: VAZIO tipo: int indice: 3

A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;

	 SIMBOLO reconhecido, nome: x valor: 3 tipo: int indice: 4

A Line: 10
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;

	SOMA reconhecidoA Line: 11
A keyword: if
A Left Parenthesis: (
An identifier: x
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 12
An identifier: y
A equals: =
An integer: 4 (4)
A final: ;

	 ATRIBUICAO reconhecido, nome: y valor: 4 indice: 5

A Line: 13
A keyword: if
A Left Parenthesis: (
An identifier: y
A compare: ==
An integer: 4 (4)
A Right Parenthesis: )
A left key: {
A Line: 14
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;

	 ATRIBUICAO reconhecido, nome: x valor: 5 indice: 5

A Line: 15
A right key: }
A Line: 16
A right key: }
A Line: 17
A Line: 18
A keyword: do
A left key: {
A Line: 19
An identifier: x
A equals: =
An identifier: y
A final: ;

	 ATRIBUICAO reconhecido, nome: x valor: y indice: 5

A Line: 20
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: y
A compare: <
An integer: 1 (1)
A Right Parenthesis: )
A final: ;
A Line: 21
A Line: 22
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 23
A right key: }
EOF

Passo 1: AINDA LENDO TABELA DE SIMBOLOS

A Constant: #define
An identifier: PAL
An integer: 3 (3)

	 SIMBOLO reconhecido, nome: PAL valor: 3 tipo: #define tamanho tabela: 0

	TOTAL = 1
>>>>>>> [(null)]	[PAL] 0
	 testando função 0
	 TESTANDO TABELA DE SIMBOLOS>> PAL valor: 3 tipo: #define indice: 0
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)

	 SIMBOLO reconhecido, nome: ABCDEF valor: 10 tipo: #define tamanho tabela: 1

	TOTAL = 2
>>>>>>> [PAL]	[ABCDEF] 0
>>>>>>> [(null)]	[ABCDEF] 1
	 testando função 0
	 TESTANDO TABELA DE SIMBOLOS>> ABCDEF valor: 10 tipo: #define indice: 1
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)

	 SIMBOLO reconhecido, nome: BRYANHF valor: 5 tipo: #define tamanho tabela: 2

	TOTAL = 3
>>>>>>> [PAL]	[BRYANHF] 0
>>>>>>> [ABCDEF]	[BRYANHF] 1
>>>>>>> [(null)]	[BRYANHF] 2
	 testando função 0
	 TESTANDO TABELA DE SIMBOLOS>> BRYANHF valor: 5 tipo: #define indice: 2
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;

	 SIMBOLO reconhecido, nome: y valor: VAZIO tipo: int indice: 3


	TOTAL = 4
>>>>>>> [PAL]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [(null)]	[y] 3
	 testando função -1
	 TESTANDO TABELA DE SIMBOLOS>> y valor: VAZIO (nil) Tipo: int indice: 3
A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;

	 SIMBOLO reconhecido, nome: x valor: 3 tipo: int indice: 4


	TOTAL = 5
>>>>>>> [PAL]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [(null)]	[x] 4
	 testando função -1
	 TESTANDO TABELA DE SIMBOLOS>> x valor: 3 Tipo: int indice: 4
A Line: 10
An identifier: x
A equals: =
An identifier: x

	TOTAL = 5
>>>>>>> [PAL]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4A minus operator: -
An identifier: y

	TOTAL = 5
>>>>>>> [PAL]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3A final: ;

	SOMA reconhecido
	TOTAL = 5
>>>>>>> [PAL]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4A Line: 11
A keyword: if
A Left Parenthesis: (
An identifier: x

	TOTAL = 5
>>>>>>> [PAL]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 12
An identifier: y
A equals: =
An integer: 4 (4)
A final: ;

	 ATRIBUICAO reconhecido, nome: y valor: 4 indice: 5


	TOTAL = 5
>>>>>>> [PAL]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3
	 testando função 3
	 TESTANDO TABELA DE SIMBOLOS>> y valor: 4 Tipo: int indice: 3
A Line: 13
A keyword: if
A Left Parenthesis: (
An identifier: y

	TOTAL = 5
>>>>>>> [PAL]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3A compare: ==
An integer: 4 (4)
A Right Parenthesis: )
A left key: {
A Line: 14
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;

	 ATRIBUICAO reconhecido, nome: x valor: 5 indice: 5


	TOTAL = 5
>>>>>>> [PAL]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4
	 testando função 4
	 TESTANDO TABELA DE SIMBOLOS>> x valor: 5 Tipo: int indice: 4
A Line: 15
A right key: }
A Line: 16
A right key: }
A Line: 17
A Line: 18
A keyword: do
A left key: {
A Line: 19
An identifier: x
A equals: =
An identifier: y

	TOTAL = 5
>>>>>>> [PAL]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3A final: ;

	 ATRIBUICAO reconhecido, nome: x valor: y indice: 5


	TOTAL = 5
>>>>>>> [PAL]	[x] 0
>>>>>>> [ABCDEF]	[x] 1
>>>>>>> [BRYANHF]	[x] 2
>>>>>>> [y]	[x] 3
>>>>>>> [x]	[x] 4
	 testando função 4
	 TESTANDO TABELA DE SIMBOLOS>> x valor: y Tipo: int indice: 4
A Line: 20
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: y

	TOTAL = 5
>>>>>>> [PAL]	[y] 0
>>>>>>> [ABCDEF]	[y] 1
>>>>>>> [BRYANHF]	[y] 2
>>>>>>> [y]	[y] 3A compare: <
An integer: 1 (1)
A Right Parenthesis: )
A final: ;
A Line: 21
A Line: 22
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 23
A right key: }
EOF

	 TAMANHO TOTAL TABELA: 5

	 INDICE: 0 	 nome: PAL 	 valor: 3 	 tipo: #define 
	 INDICE: 1 	 nome: ABCDEF 	 valor: 10 	 tipo: #define 
	 INDICE: 2 	 nome: BRYANHF 	 valor: 5 	 tipo: #define 
	 INDICE: 3 	 nome: y 	 valor: 4 	 tipo: int 
	 INDICE: 4 	 nome: x 	 valor: y 	 tipo: int 
Passo 2: IDENTIFICANDO CONSTANTES

A Constant: #define
An identifier: PAL
An integer: 3 (3)

	Constante reconhecida!

A Line: 1
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)

	Constante reconhecida!

A Line: 2
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)

	Constante reconhecida!

A Line: 3
A Line: 4
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 5
A Line: 6
A Line: 7
A keyword: int
An identifier: y
A final: ;
A Line: 8
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;
A Line: 9
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;
A Line: 10
A keyword: if
A Left Parenthesis: (
An identifier: x
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 11
An identifier: y
A equals: =
An integer: 4 (4)
A final: ;
A Line: 12
A keyword: if
A Left Parenthesis: (
An identifier: y
A compare: ==
An integer: 4 (4)
A Right Parenthesis: )
A left key: {
A Line: 13
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;
A Line: 14
A right key: }
A Line: 15
A right key: }
A Line: 16
A Line: 17
A keyword: do
A left key: {
A Line: 18
An identifier: x
A equals: =
An identifier: y
A final: ;
A Line: 19
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: y
A compare: <
An integer: 1 (1)
A Right Parenthesis: )
A final: ;
A Line: 20
A Line: 21
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 22
A right key: }
EOF

Passo 3: LENDO FUNCAO PRINCIPAL

A Constant: #define
An identifier: PAL
An integer: 3 (3)
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {

	Funcao main reconhecida!

A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;

	Declaracao reconhecida!

A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;

	Declaracao com instanciacao reconhecida!

A Line: 10
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;

	Soma reconhecida!

A Line: 11
A keyword: if
A Left Parenthesis: (
An identifier: x
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {

	Comando if reconhecido!

A Line: 12
An identifier: y
A equals: =
An integer: 4 (4)
A final: ;

	Atribuicao reconhecida!

A Line: 13
A keyword: if
A Left Parenthesis: (
An identifier: y
A compare: ==
An integer: 4 (4)
A Right Parenthesis: )
A left key: {

	Comando if reconhecido!

A Line: 14
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;

	Atribuicao reconhecida!

A Line: 15
A right key: }
A Line: 16
A right key: }
A Line: 17
A Line: 18
A keyword: do
A left key: {

	Comando do-while reconhecido!

A Line: 19
An identifier: x
A equals: =
An identifier: y
A final: ;

	Atribuicao reconhecida!

A Line: 20
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: y
A compare: <
An integer: 1 (1)
A Right Parenthesis: )
A final: ;
A Line: 21
A Line: 22
A keyword: return
An integer: 0 (0)
A final: ;

	Retorno da funcao main reconhecida!

A Line: 23
A right key: }
EOF

Passo 4: VERIFICANDO CODIGO

A Constant: #define
An identifier: PAL
An integer: 3 (3)
A Line: 2
A Constant: #define
An identifier: ABCDEF
An integer: 10 (10)
A Line: 3
A Constant: #define
An identifier: BRYANHF
An integer: 5 (5)
A Line: 4
A Line: 5
A keyword: int
A keyword: main
A Left Parenthesis: (
A Right Parenthesis: )
A left key: {
A Line: 6
A Line: 7
A Line: 8
A keyword: int
An identifier: y
A final: ;
A Line: 9
A keyword: int
An identifier: x
A equals: =
An integer: 3 (3)
A final: ;
A Line: 10
An identifier: x
A equals: =
An identifier: x
A minus operator: -
An identifier: y
A final: ;
A Line: 11
A keyword: if
A Left Parenthesis: (
An identifier: x
A compare: ==
An integer: 3 (3)
A Right Parenthesis: )
A left key: {
A Line: 12
An identifier: y
A equals: =
An integer: 4 (4)
A final: ;
A Line: 13
A keyword: if
A Left Parenthesis: (
An identifier: y
A compare: ==
An integer: 4 (4)
A Right Parenthesis: )
A left key: {
A Line: 14
An identifier: x
A equals: =
An integer: 5 (5)
A final: ;
A Line: 15
A right key: }
A Line: 16
A right key: }
A Line: 17
A Line: 18
A keyword: do
A left key: {
A Line: 19
An identifier: x
A equals: =
An identifier: y
A final: ;
A Line: 20
A right key: }
A keyword: while
A Left Parenthesis: (
An identifier: y
A compare: <
An integer: 1 (1)
A Right Parenthesis: )
A final: ;
A Line: 21
A Line: 22
A keyword: return
An integer: 0 (0)
A final: ;
A Line: 23
A right key: }
EOF


	Numero de parentesis abertos: 0

	Numero de chaves abertas: 0

	Estrutura DO-WHILE completo: 0

	Numero de simbolos na tabela 5

